From 79f857e886528f9d4537613b406f7945f1b4855a Mon Sep 17 00:00:00 2001
From: enesuzun2002 <emurat.uzun@gmail.com>
Date: Tue, 14 Mar 2023 13:50:45 +0300
Subject: [PATCH] Revert "Plumb attribution tag from Sensor Manager"

This reverts commit a9920b8e8d81c9c4862bc6876be35ee8c3a19e13.

Change-Id: Idf340f4d8eeb90370e4949ff51de164b7509c62f
---
 .../android/hardware/SystemSensorManager.java |  5 +--
 core/jni/android_hardware_SensorManager.cpp   | 38 ++++++++++---------
 2 files changed, 22 insertions(+), 21 deletions(-)

diff --git a/core/java/android/hardware/SystemSensorManager.java b/core/java/android/hardware/SystemSensorManager.java
index 18d86d69206f..5117da29cadd 100644
--- a/core/java/android/hardware/SystemSensorManager.java
+++ b/core/java/android/hardware/SystemSensorManager.java
@@ -664,7 +664,7 @@ public class SystemSensorManager extends SensorManager {
     private abstract static class BaseEventQueue {
         private static native long nativeInitBaseEventQueue(long nativeManager,
                 WeakReference<BaseEventQueue> eventQWeak, MessageQueue msgQ,
-                String packageName, int mode, String opPackageName, String attributionTag);
+                String packageName, int mode, String opPackageName);
         private static native int nativeEnableSensor(long eventQ, int handle, int rateUs,
                 int maxBatchReportLatencyUs);
         private static native int nativeDisableSensor(long eventQ, int handle);
@@ -687,8 +687,7 @@ public class SystemSensorManager extends SensorManager {
             if (packageName == null) packageName = "";
             mNativeSensorEventQueue = nativeInitBaseEventQueue(manager.mNativeInstance,
                     new WeakReference<>(this), looper.getQueue(),
-                    packageName, mode, manager.mContext.getOpPackageName(),
-                    manager.mContext.getAttributionTag());
+                    packageName, mode, manager.mContext.getOpPackageName());
             mCloseGuard.open("BaseEventQueue.dispose");
             mManager = manager;
         }
diff --git a/core/jni/android_hardware_SensorManager.cpp b/core/jni/android_hardware_SensorManager.cpp
index 78b403c39a17..5b5711aaf1e2 100644
--- a/core/jni/android_hardware_SensorManager.cpp
+++ b/core/jni/android_hardware_SensorManager.cpp
@@ -437,18 +437,11 @@ private:
 };
 
 static jlong nativeInitSensorEventQueue(JNIEnv *env, jclass clazz, jlong sensorManager,
-                                        jobject eventQWeak, jobject msgQ, jstring packageName,
-                                        jint mode, jstring opPackageName, jstring attributionTag) {
+        jobject eventQWeak, jobject msgQ, jstring packageName, jint mode) {
     SensorManager* mgr = reinterpret_cast<SensorManager*>(sensorManager);
     ScopedUtfChars packageUtf(env, packageName);
     String8 clientName(packageUtf.c_str());
-
-    String16 attributionTagName("");
-    if (attributionTag != nullptr) {
-        ScopedUtfChars attrUtf(env, attributionTag);
-        attributionTagName = String16(attrUtf.c_str());
-    }
-    sp<SensorEventQueue> queue(mgr->createEventQueue(clientName, mode, attributionTagName));
+    sp<SensorEventQueue> queue(mgr->createEventQueue(clientName, mode));
 
     if (queue == NULL) {
         jniThrowRuntimeException(env, "Cannot construct native SensorEventQueue.");
@@ -540,20 +533,29 @@ static const JNINativeMethod gSystemSensorManagerMethods[] = {
 };
 
 static const JNINativeMethod gBaseEventQueueMethods[] = {
-        {"nativeInitBaseEventQueue",
-         "(JLjava/lang/ref/WeakReference;Landroid/os/MessageQueue;Ljava/lang/String;ILjava/lang/"
-         "String;Ljava/lang/String;)J",
-         (void *)nativeInitSensorEventQueue},
+    {"nativeInitBaseEventQueue",
+             "(JLjava/lang/ref/WeakReference;Landroid/os/MessageQueue;Ljava/lang/String;ILjava/lang/String;)J",
+             (void*)nativeInitSensorEventQueue },
 
-        {"nativeEnableSensor", "(JIII)I", (void *)nativeEnableSensor},
+    {"nativeEnableSensor",
+            "(JIII)I",
+            (void*)nativeEnableSensor },
 
-        {"nativeDisableSensor", "(JI)I", (void *)nativeDisableSensor},
+    {"nativeDisableSensor",
+            "(JI)I",
+            (void*)nativeDisableSensor },
 
-        {"nativeDestroySensorEventQueue", "(J)V", (void *)nativeDestroySensorEventQueue},
+    {"nativeDestroySensorEventQueue",
+            "(J)V",
+            (void*)nativeDestroySensorEventQueue },
 
-        {"nativeFlushSensor", "(J)I", (void *)nativeFlushSensor},
+    {"nativeFlushSensor",
+            "(J)I",
+            (void*)nativeFlushSensor },
 
-        {"nativeInjectSensorData", "(JI[FIJ)I", (void *)nativeInjectSensorData},
+    {"nativeInjectSensorData",
+            "(JI[FIJ)I",
+            (void*)nativeInjectSensorData },
 };
 
 } //unnamed namespace
-- 
2.34.1

